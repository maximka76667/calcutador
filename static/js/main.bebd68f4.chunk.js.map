{"version":3,"sources":["components/CalculatorPanel.tsx","components/CalculatorScreen.tsx","components/Calculator.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["CalculatorPanel","handleClick","handleAction","handleClearInput","handleDeleteLast","handleReset","className","type","onClick","CalculatorScreen","prevNumber","action","inputFieldValue","name","value","readOnly","disabled","Calculator","props","React","useState","setPrevNumber","setInputFieldValue","setAction","isDone","setIsDone","appRef","useRef","updateInputValue","newValue","clear","getNewValue","updateAction","submit","result","a","b","floatFixNumber","length","add","deduct","multiply","divide","calculate","reset","deleteLast","slice","useEffect","current","focus","tabIndex","onKeyDown","e","key","match","preventDefault","ref","onSubmit","target","innerText","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bebd68f4.chunk.js","sourcesContent":["import { FormEvent } from \"react\"\r\n\r\ninterface Panel {\r\n  handleClick: (e: FormEvent) => void,\r\n  handleAction: (e: FormEvent) => void,\r\n  handleReset: (e: FormEvent) => void,\r\n  handleClearInput: (e: FormEvent) => void,\r\n  handleDeleteLast: (e: FormEvent) => void\r\n}\r\n\r\nfunction CalculatorPanel({ handleClick, handleAction, handleClearInput, handleDeleteLast, handleReset }: Panel) {\r\n  return (\r\n    <div className=\"calculator__panel\">\r\n      <button className=\"calculator__btn\" type=\"button\" onClick={handleClick}>1</button>\r\n      <button className=\"calculator__btn\" type=\"button\" onClick={handleClick}>2</button>\r\n      <button className=\"calculator__btn\" type=\"button\" onClick={handleClick}>3</button>\r\n      <button className=\"calculator__btn\" type=\"button\" onClick={handleAction}>+</button>\r\n      <button className=\"calculator__btn\" type=\"button\" onClick={handleReset}>Rst</button>\r\n      <button className=\"calculator__btn\" type=\"button\" onClick={handleClick}>4</button>\r\n      <button className=\"calculator__btn\" type=\"button\" onClick={handleClick}>5</button>\r\n      <button className=\"calculator__btn\" type=\"button\" onClick={handleClick}>6</button>\r\n      <button className=\"calculator__btn\" type=\"button\" onClick={handleAction}>-</button>\r\n      <button className=\"calculator__btn\" type=\"button\" onClick={handleDeleteLast}>Dlt</button>\r\n      <button className=\"calculator__btn\" type=\"button\" onClick={handleClick}>7</button>\r\n      <button className=\"calculator__btn\" type=\"button\" onClick={handleClick}>8</button>\r\n      <button className=\"calculator__btn\" type=\"button\" onClick={handleClick}>9</button>\r\n      <button className=\"calculator__btn\" type=\"button\" onClick={handleAction}>*</button>\r\n      <button className=\"calculator__btn\" type=\"button\" onClick={handleClearInput}>Clr</button>\r\n      <button className=\"calculator__btn\" type=\"button\" onClick={handleClick}>0</button>\r\n      <button className=\"calculator__btn\" type=\"button\" onClick={handleClick}>00</button>\r\n      <button className=\"calculator__btn\" type=\"button\" onClick={handleClick}>000</button>\r\n      <button className=\"calculator__btn\" type=\"button\" onClick={handleAction}>/</button>\r\n      <button className=\"calculator__btn\" type=\"button\" onClick={handleClick}>.</button>\r\n      <button type=\"submit\" className=\"calculator__btn calculator__equal-btn\">=</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CalculatorPanel","interface Screen {\r\n  prevNumber: string,\r\n  action: string,\r\n  inputFieldValue: string\r\n}\r\n\r\nfunction CalculatorScreen({ prevNumber, action, inputFieldValue }: Screen) {\r\n  return (\r\n    <div className=\"calculator__screen\">\r\n      <p className=\"calculator__action\">{prevNumber} {action}</p>\r\n      <input type=\"text\" name=\"input\" className=\"calculator__input\" value={inputFieldValue} readOnly disabled />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CalculatorScreen","import React, { FormEvent, useRef } from \"react\";\r\nimport CalculatorPanel from \"./CalculatorPanel\";\r\nimport CalculatorScreen from \"./CalculatorScreen\";\r\n\r\nfunction Calculator(props: object) {\r\n\r\n  const [prevNumber, setPrevNumber] = React.useState('');\r\n  const [inputFieldValue, setInputFieldValue] = React.useState('');\r\n  const [action, setAction] = React.useState('');\r\n  const [isDone, setIsDone] = React.useState(false);\r\n  const appRef = useRef<HTMLDivElement>(null);\r\n\r\n  function handleClick(e: FormEvent): void {\r\n    e.preventDefault();\r\n\r\n    let target = e.target as HTMLInputElement;\r\n\r\n    updateInputValue(target.innerText);\r\n  }\r\n\r\n  function updateInputValue(newValue: string): void {\r\n    function getNewValue(newValue: string): string {\r\n      // If starts typing new expression\r\n      if(isDone) {\r\n        return newValue;\r\n      }\r\n      return inputFieldValue + newValue;\r\n    }\r\n\r\n    clear();\r\n\r\n    setInputFieldValue(getNewValue(newValue));\r\n  }\r\n\r\n  const handleKeyDown = (e: React.KeyboardEvent) => {\r\n    const { key } = e;\r\n    if(!key.match(/Tab|F\\d{1,2}/)){\r\n      e.preventDefault();\r\n      if(key.match(/^[\\d{1}.]$/)) {\r\n        updateInputValue(key);\r\n      }\r\n      if(key.match(/[+\\-*/]/)) {\r\n        updateAction(key);\r\n      }\r\n      if(key.match(/Enter|=/)) {\r\n        submit();\r\n      }\r\n      if(key.match(/Backspace|Delete/)) {\r\n        deleteLast();\r\n      }\r\n    }\r\n  }\r\n\r\n  function handleAction(e: FormEvent): void {\r\n    e.preventDefault();\r\n    let target = e.target as HTMLInputElement;\r\n    updateAction(target.innerText);\r\n  }\r\n\r\n  function updateAction(action: string) {\r\n    setAction(action);\r\n    setPrevNumber(inputFieldValue || prevNumber || '0');\r\n    clear();\r\n  }\r\n\r\n  function handleSubmit(e: FormEvent): void {\r\n    e.preventDefault();\r\n\r\n    submit();\r\n  }\r\n\r\n  function submit(): void {\r\n    let result = calculate(+prevNumber, +inputFieldValue);\r\n    reset();\r\n    setIsDone(true);\r\n    setInputFieldValue(result + '');\r\n  }\r\n\r\n  function calculate(a: number, b: number): number {\r\n    const floatFixNumber = prevNumber.length * 100 + inputFieldValue.length * 100;\r\n    function add(a: number, b: number): number {\r\n      return (a * floatFixNumber + b * floatFixNumber) / floatFixNumber;\r\n    }\r\n  \r\n    function deduct(a: number, b: number): number {\r\n      return (a * floatFixNumber - b * floatFixNumber) / floatFixNumber;\r\n    }\r\n\r\n    function multiply(a: number, b:number): number {\r\n      return (a * floatFixNumber * b) / floatFixNumber;\r\n    }\r\n\r\n    function divide(a: number, b:number): number {\r\n      return (a * floatFixNumber / b) / floatFixNumber;\r\n    }\r\n\r\n    switch (action) {\r\n      case '+':\r\n        return add(a, b);\r\n    \r\n      case '-':\r\n        return deduct(a, b);\r\n\r\n      case '*':\r\n        return multiply(a, b);\r\n\r\n      case '/':\r\n        return divide(a, b);\r\n\r\n      default:\r\n        return +inputFieldValue;\r\n    }\r\n  }\r\n\r\n  function handleReset(e: FormEvent): void {\r\n    e.preventDefault();\r\n    reset();\r\n  }\r\n\r\n  function handleDeleteLast(e: FormEvent): void {\r\n    e.preventDefault();\r\n    deleteLast();\r\n  }\r\n\r\n  function deleteLast(): void {\r\n    let newValue = inputFieldValue.slice(0, -1);\r\n    setInputFieldValue(newValue);\r\n  }\r\n\r\n  function handleClearInput(e: FormEvent): void {\r\n    e.preventDefault();\r\n    clear();\r\n  }\r\n\r\n  function reset() {\r\n    setInputFieldValue('');\r\n    setPrevNumber('');\r\n    setAction('');\r\n    setIsDone(false);\r\n  }\r\n\r\n  function clear() {\r\n    setInputFieldValue('');\r\n    setIsDone(false);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if(inputFieldValue === '-') {\r\n      setInputFieldValue('');\r\n    }\r\n  }, [inputFieldValue])\r\n\r\n  React.useEffect(() => {\r\n    if (appRef.current !== null) {\r\n      appRef.current.focus();\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"calculator\" tabIndex={0} onKeyDown={handleKeyDown} ref={appRef}>\r\n      <form className=\"calculator__form\" onSubmit={handleSubmit}>\r\n        <CalculatorScreen\r\n          prevNumber={prevNumber}\r\n          action={action}\r\n          inputFieldValue={inputFieldValue}\r\n        />\r\n        <CalculatorPanel\r\n          handleClick={handleClick}\r\n          handleAction={handleAction}\r\n          handleReset={handleReset}\r\n          handleClearInput={handleClearInput}\r\n          handleDeleteLast={handleDeleteLast}\r\n        />\r\n      </form>\r\n      {/* Tests */}\r\n      {/* <div className=\"calculator__info-wrapper\">\r\n        <div className={`calculator__info`}>\r\n          <p>Input: {inputFieldValue}</p>\r\n          <p>First Number: {prevNumber}</p>\r\n          <p>Action: {action}</p>\r\n          <p>isResult: {isDone.toString()}</p>\r\n        </div>\r\n      </div> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Calculator;","import Calculator from './Calculator';\n\nfunction App(props: object) {\n  return (\n    <div className=\"app\">\n      <main className=\"content\">\n        <Calculator />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}