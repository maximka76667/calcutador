{"version":3,"sources":["components/CalculatorPanel.tsx","components/CalculatorScreen.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["CalculatorPanel","handleClick","handleAction","handleClearInput","handleDeleteLast","handleReset","className","type","onClick","CalculatorScreen","prevNumber","action","inputFieldValue","name","value","readOnly","disabled","App","props","React","useState","setPrevNumber","setInputFieldValue","setAction","isDone","setIsDone","appRef","useRef","updateInputValue","newValue","clear","getNewValue","updateAction","submit","result","a","b","add","deduct","multiply","divide","calculate","reset","deleteLast","slice","useEffect","current","focus","tabIndex","onKeyDown","e","preventDefault","key","match","ref","onSubmit","target","innerText","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.38f60ba4.chunk.js","sourcesContent":["import { FormEvent } from \"react\"\r\n\r\ninterface Panel {\r\n  handleClick: (e: FormEvent) => void,\r\n  handleAction: (e: FormEvent) => void,\r\n  handleReset: (e: FormEvent) => void,\r\n  handleClearInput: (e: FormEvent) => void,\r\n  handleDeleteLast: (e: FormEvent) => void\r\n}\r\n\r\nfunction CalculatorPanel({ handleClick, handleAction, handleClearInput, handleDeleteLast, handleReset }: Panel) {\r\n  return (\r\n    <div className=\"calculator__panel\">\r\n      <button className=\"calculator__btn\" type=\"button\" onClick={handleClick}>1</button>\r\n      <button className=\"calculator__btn\" type=\"button\" onClick={handleClick}>2</button>\r\n      <button className=\"calculator__btn\" type=\"button\" onClick={handleClick}>3</button>\r\n      <button className=\"calculator__btn\" type=\"button\" onClick={handleAction}>+</button>\r\n      <button className=\"calculator__btn\" type=\"button\" onClick={handleReset}>Rst</button>\r\n      <button className=\"calculator__btn\" type=\"button\" onClick={handleClick}>4</button>\r\n      <button className=\"calculator__btn\" type=\"button\" onClick={handleClick}>5</button>\r\n      <button className=\"calculator__btn\" type=\"button\" onClick={handleClick}>6</button>\r\n      <button className=\"calculator__btn\" type=\"button\" onClick={handleAction}>-</button>\r\n      <button className=\"calculator__btn\" type=\"button\" onClick={handleDeleteLast}>Dlt</button>\r\n      <button className=\"calculator__btn\" type=\"button\" onClick={handleClick}>7</button>\r\n      <button className=\"calculator__btn\" type=\"button\" onClick={handleClick}>8</button>\r\n      <button className=\"calculator__btn\" type=\"button\" onClick={handleClick}>9</button>\r\n      <button className=\"calculator__btn\" type=\"button\" onClick={handleAction}>*</button>\r\n      <button className=\"calculator__btn\" type=\"button\" onClick={handleClearInput}>Clr</button>\r\n      <button className=\"calculator__btn\" type=\"button\" onClick={handleClick}>0</button>\r\n      <button className=\"calculator__btn\" type=\"button\" onClick={handleClick}>00</button>\r\n      <button className=\"calculator__btn\" type=\"button\" onClick={handleClick}>000</button>\r\n      <button className=\"calculator__btn\" type=\"button\" onClick={handleAction}>/</button>\r\n      <button className=\"calculator__btn\" type=\"button\" onClick={handleClick}>.</button>\r\n      <button type=\"submit\" className=\"calculator__btn calculator__equal-btn\">=</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CalculatorPanel","interface Screen {\r\n  prevNumber: string,\r\n  action: string,\r\n  inputFieldValue: string\r\n}\r\n\r\nfunction CalculatorScreen({ prevNumber, action, inputFieldValue }: Screen) {\r\n  return (\r\n    <div className=\"calculator__screen\">\r\n      <p className=\"calculator__prevNumber\">{prevNumber}</p>\r\n      <p className=\"calculator__action\">{action}</p>\r\n      <input type=\"text\" name=\"input\" className=\"calculator__input\" value={inputFieldValue} readOnly disabled />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CalculatorScreen","import React, { FormEvent, useRef } from 'react';\nimport CalculatorPanel from './CalculatorPanel';\nimport CalculatorScreen from './CalculatorScreen';\n\nfunction App(props: object) {\n\n  const [prevNumber, setPrevNumber] = React.useState('');\n  const [inputFieldValue, setInputFieldValue] = React.useState('');\n  const [action, setAction] = React.useState('');\n  const [isDone, setIsDone] = React.useState(false);\n  const appRef = useRef<HTMLDivElement>(null);\n\n  function handleClick(e: FormEvent): void {\n    e.preventDefault();\n\n    let target = e.target as HTMLInputElement;\n\n    updateInputValue(target.innerText);\n  }\n\n  function updateInputValue(newValue: string): void {\n    function getNewValue(newValue: string): string {\n      // If starts typing new expression\n      if(isDone) {\n        return newValue;\n      }\n      return inputFieldValue + newValue;\n    }\n\n    clear();\n\n    setInputFieldValue(getNewValue(newValue));\n  }\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    e.preventDefault();\n    const { key } = e;\n    if(key.match(/^[\\d{1}.]$/)) {\n      updateInputValue(key);\n    }\n    if(key.match(/[+\\-*/]/)) {\n      updateAction(key);\n    }\n    if(key.match(/Enter|=/)) {\n      submit();\n    }\n    if(key.match(/Backspace|Delete/)) {\n      deleteLast();\n    }\n  }\n\n  function handleAction(e: FormEvent): void {\n    e.preventDefault();\n    let target = e.target as HTMLInputElement;\n    updateAction(target.innerText);\n  }\n\n  function updateAction(action: string) {\n    setAction(action);\n    setPrevNumber(inputFieldValue || prevNumber || '0');\n    clear();\n  }\n\n  function handleSubmit(e: FormEvent): void {\n    e.preventDefault();\n\n    submit();\n  }\n\n  function submit(): void {\n    let result = calculate(+prevNumber, +inputFieldValue);\n    reset();\n    setIsDone(true);\n    setInputFieldValue(result + '');\n  }\n\n  function calculate(a: number, b: number): number {\n    function add(a: number, b: number): number {\n      return (a * 100 + b * 100) / 100;\n    }\n  \n    function deduct(a: number, b: number): number {\n      return (a * 100 - b * 100) / 100;\n    }\n\n    function multiply(a: number, b:number): number {\n      return (a * 100 * b) / 100;\n    }\n\n    function divide(a: number, b:number): number {\n      return (a * 100 / b) / 100;\n    }\n\n    switch (action) {\n      case '+':\n        return add(a, b);\n    \n      case '-':\n        return deduct(a, b);\n\n      case '*':\n        return multiply(a, b);\n\n      case '/':\n        return divide(a, b);\n\n      default:\n        return +inputFieldValue;\n    }\n  }\n\n  function handleReset(e: FormEvent): void {\n    e.preventDefault();\n    reset();\n  }\n\n  function handleDeleteLast(e: FormEvent): void {\n    e.preventDefault();\n    deleteLast();\n  }\n\n  function deleteLast() {\n    let newValue = inputFieldValue.slice(0, -1);\n    setInputFieldValue(newValue);\n  }\n\n  function handleClearInput(e: FormEvent): void {\n    e.preventDefault();\n    clear();\n  }\n\n  function reset() {\n    setInputFieldValue('');\n    setPrevNumber('');\n    setAction('');\n    setIsDone(false);\n  }\n\n  function clear() {\n    setInputFieldValue('');\n    setIsDone(false);\n  }\n\n  React.useEffect(() => {\n    if(inputFieldValue === '-') {\n      setInputFieldValue('');\n    }\n  }, [inputFieldValue])\n\n  React.useEffect(() => {\n    if (appRef.current !== null) {\n      appRef.current.focus();\n    }\n  }, [])\n\n  return (\n    <div className=\"app\" tabIndex={0} onKeyDown={handleKeyDown} ref={appRef}>\n      <main className=\"content\">\n      <div className=\"calculator\">\n      <form className=\"calculator__form\" onSubmit={handleSubmit}>\n        <CalculatorScreen\n          prevNumber={prevNumber}\n          action={action}\n          inputFieldValue={inputFieldValue}\n        />\n        <CalculatorPanel\n          handleClick={handleClick}\n          handleAction={handleAction}\n          handleReset={handleReset}\n          handleClearInput={handleClearInput}\n          handleDeleteLast={handleDeleteLast}\n        />\n      </form>\n      {/* <div className=\"calculator__info-wrapper\">\n        <div className={`calculator__info`}>\n          <p>Input: {inputFieldValue}</p>\n          <p>First Number: {prevNumber}</p>\n          <p>Action: {action}</p>\n          <p>isResult: {isDone.toString()}</p>\n        </div>\n      </div> */}\n    </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}