{"version":3,"sources":["components/CalculatorPanel.tsx","components/CalculatorScreen.tsx","utils/mathOperations.ts","components/Calculator.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["CalculatorPanel","props","className","type","onClick","handleClick","handleAction","handleReset","handleDeleteLast","handleClearInput","CalculatorScreen","prevNumber","action","name","value","inputFieldValue","readOnly","disabled","fixResult","number","numberString","match","checkIsFloatNumber","test","replace","toFixed","Calculator","React","useState","setPrevNumber","setInputFieldValue","setAction","isDone","setIsDone","appRef","useRef","updateInputValue","newValue","clear","getNewValue","updateAction","submit","result","a","b","add","deduct","multiply","divide","calculate","reset","deleteLast","slice","useEffect","current","focus","tabIndex","onKeyDown","e","key","isNeedToHandle","preventDefault","handleNeedToHandleKeys","ref","onSubmit","target","innerText","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eea63c74.chunk.js","sourcesContent":["import { FormEvent } from \"react\"\r\n\r\ninterface Panel {\r\n  handleClick: (e: FormEvent) => void,\r\n  handleAction: (e: FormEvent) => void,\r\n  handleReset: (e: FormEvent) => void,\r\n  handleClearInput: (e: FormEvent) => void,\r\n  handleDeleteLast: (e: FormEvent) => void\r\n}\r\n\r\nfunction CalculatorPanel(props: Panel) {\r\n  return (\r\n    <div className=\"calculator__panel\">\r\n      <button className=\"calculator__btn\" type=\"button\" onClick={props.handleClick}>1</button>\r\n      <button className=\"calculator__btn\" type=\"button\" onClick={props.handleClick}>2</button>\r\n      <button className=\"calculator__btn\" type=\"button\" onClick={props.handleClick}>3</button>\r\n      <button className=\"calculator__btn\" type=\"button\" onClick={props.handleAction}>+</button>\r\n      <button className=\"calculator__btn\" type=\"button\" onClick={props.handleReset}>Rst</button>\r\n      <button className=\"calculator__btn\" type=\"button\" onClick={props.handleClick}>4</button>\r\n      <button className=\"calculator__btn\" type=\"button\" onClick={props.handleClick}>5</button>\r\n      <button className=\"calculator__btn\" type=\"button\" onClick={props.handleClick}>6</button>\r\n      <button className=\"calculator__btn\" type=\"button\" onClick={props.handleAction}>-</button>\r\n      <button className=\"calculator__btn\" type=\"button\" onClick={props.handleDeleteLast}>Dlt</button>\r\n      <button className=\"calculator__btn\" type=\"button\" onClick={props.handleClick}>7</button>\r\n      <button className=\"calculator__btn\" type=\"button\" onClick={props.handleClick}>8</button>\r\n      <button className=\"calculator__btn\" type=\"button\" onClick={props.handleClick}>9</button>\r\n      <button className=\"calculator__btn\" type=\"button\" onClick={props.handleAction}>*</button>\r\n      <button className=\"calculator__btn\" type=\"button\" onClick={props.handleClearInput}>Clr</button>\r\n      <button className=\"calculator__btn\" type=\"button\" onClick={props.handleClick}>0</button>\r\n      <button className=\"calculator__btn\" type=\"button\" onClick={props.handleClick}>00</button>\r\n      <button className=\"calculator__btn\" type=\"button\" onClick={props.handleClick}>000</button>\r\n      <button className=\"calculator__btn\" type=\"button\" onClick={props.handleAction}>/</button>\r\n      <button className=\"calculator__btn\" type=\"button\" onClick={props.handleClick}>.</button>\r\n      <button type=\"submit\" className=\"calculator__btn calculator__equal-btn\">=</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CalculatorPanel","interface Screen {\r\n  prevNumber: string,\r\n  action: string,\r\n  inputFieldValue: string\r\n}\r\n\r\nfunction CalculatorScreen(props: Screen) {\r\n  return (\r\n    <div className=\"calculator__screen\">\r\n      <p className=\"calculator__action\">{props.prevNumber} {props.action}</p>\r\n      <input type=\"text\" name=\"input\" className=\"calculator__input\" value={props.inputFieldValue} readOnly disabled />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CalculatorScreen","// function add(a: number, b: number): number {\r\n  \r\n//   const fix = (a + '').length + (b + '').length + 1;\r\n//   return +(a + b).toFixed(fix);\r\n// }\r\n\r\n// export default add;\r\n\r\nfunction add(a: number, b: number): number {\r\n  return fixResult(a + b);\r\n}\r\n\r\nfunction deduct(a: number, b: number): number {\r\n  return fixResult(a - b);\r\n}\r\n\r\nfunction multiply(a: number, b:number): number {\r\n  return fixResult(a * b);\r\n}\r\n\r\nfunction divide(a: number, b:number): number {\r\n  return fixResult(a / b);\r\n}\r\n\r\nfunction fixResult(number: number): number {\r\n  let numberString = number + '';\r\n  if(numberString !== null) {\r\n    if(checkIsFloatNumber(numberString)) {\r\n      if(/\\d+\\.\\d*0{15}\\d/.test(numberString)) {\r\n        return +numberString.replace(/0{15}\\d/, '')\r\n      }\r\n      if(/\\d+\\.\\d*9{15}\\d/.test(numberString)) {\r\n        return +(+numberString).toFixed(2);\r\n      }\r\n      return +numberString\r\n    }\r\n  }\r\n  return number;\r\n}\r\n\r\nfunction checkIsFloatNumber(numberString: string): boolean {\r\n  if(numberString.match(/\\d+\\.\\d+/)) return true;\r\n  return false;\r\n}\r\n\r\nexport { add, deduct, multiply, divide }","import React, { FormEvent, useRef } from \"react\";\r\nimport CalculatorPanel from \"./CalculatorPanel\";\r\nimport CalculatorScreen from \"./CalculatorScreen\";\r\nimport { add, deduct, multiply, divide } from '../utils/mathOperations'\r\n\r\nfunction Calculator(props: object) {\r\n\r\n  const [prevNumber, setPrevNumber] = React.useState('');\r\n  const [inputFieldValue, setInputFieldValue] = React.useState('');\r\n  const [action, setAction] = React.useState('');\r\n  const [isDone, setIsDone] = React.useState(false);\r\n  const appRef = useRef<HTMLDivElement>(null);\r\n\r\n  function handleClick(e: FormEvent): void {\r\n    e.preventDefault();\r\n\r\n    let target = e.target as HTMLInputElement;\r\n\r\n    updateInputValue(target.innerText);\r\n  }\r\n\r\n  function updateInputValue(newValue: string): void {\r\n    clear();\r\n    setInputFieldValue(getNewValue(newValue));\r\n  }\r\n\r\n  function getNewValue(newValue: string): string {\r\n    if(isDone) {\r\n      return newValue;\r\n    }\r\n    return inputFieldValue + newValue;\r\n  }\r\n\r\n  const handleKeyDown = (e: React.KeyboardEvent): void => {\r\n    const { key } = e;\r\n    if(isNeedToHandle(key)) {\r\n      e.preventDefault();\r\n      handleNeedToHandleKeys(key);\r\n    }\r\n  }\r\n\r\n  function isNeedToHandle(key: string): boolean {\r\n    if(!key.match(/Tab|F\\d{1,2}/)) return true\r\n    return false;\r\n  }\r\n\r\n  function handleNeedToHandleKeys(key: string): void {\r\n    if(key.match(/^[\\d{1}.]$/)) updateInputValue(key);\r\n    if(key.match(/[+\\-*/]/)) updateAction(key);\r\n    if(key.match(/Enter|=/)) submit();\r\n    if(key.match(/Backspace|Delete/)) deleteLast();\r\n  }\r\n\r\n  function handleAction(e: FormEvent): void {\r\n    e.preventDefault();\r\n    let target = e.target as HTMLInputElement;\r\n    updateAction(target.innerText);\r\n  }\r\n\r\n  function updateAction(action: string) {\r\n    setAction(action);\r\n    setPrevNumber(inputFieldValue || prevNumber || '0');\r\n    clear();\r\n  }\r\n\r\n  function handleSubmit(e: FormEvent): void {\r\n    e.preventDefault();\r\n\r\n    submit();\r\n  }\r\n\r\n  function submit(): void {\r\n    let result = calculate(+prevNumber, +inputFieldValue);\r\n    reset();\r\n    setIsDone(true);\r\n    setInputFieldValue(result + '');\r\n  }\r\n\r\n  function calculate(a: number, b: number): number {\r\n    switch (action) {\r\n      case '+':\r\n        return add(a, b);\r\n    \r\n      case '-':\r\n        return deduct(a, b);\r\n\r\n      case '*':\r\n        return multiply(a, b);\r\n\r\n      case '/':\r\n        return divide(a, b);\r\n\r\n      default:\r\n        return +inputFieldValue;\r\n    }\r\n  }\r\n\r\n  function handleReset(e: FormEvent): void {\r\n    e.preventDefault();\r\n    reset();\r\n  }\r\n\r\n  function handleDeleteLast(e: FormEvent): void {\r\n    e.preventDefault();\r\n    deleteLast();\r\n  }\r\n\r\n  function deleteLast(): void {\r\n    let newValue = inputFieldValue.slice(0, -1);\r\n    setInputFieldValue(newValue);\r\n  }\r\n\r\n  function handleClearInput(e: FormEvent): void {\r\n    e.preventDefault();\r\n    clear();\r\n  }\r\n\r\n  function reset() {\r\n    setInputFieldValue('');\r\n    setPrevNumber('');\r\n    setAction('');\r\n    setIsDone(false);\r\n  }\r\n\r\n  function clear() {\r\n    setInputFieldValue('');\r\n    setIsDone(false);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if(inputFieldValue === '-') {\r\n      setInputFieldValue('');\r\n    }\r\n  }, [inputFieldValue])\r\n\r\n  React.useEffect(() => {\r\n    if (appRef.current !== null) {\r\n      appRef.current.focus();\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"calculator\" tabIndex={0} onKeyDown={handleKeyDown} ref={appRef}>\r\n      <form className=\"calculator__form\" onSubmit={handleSubmit}>\r\n        <CalculatorScreen\r\n          prevNumber={prevNumber}\r\n          action={action}\r\n          inputFieldValue={inputFieldValue}\r\n        />\r\n        <CalculatorPanel\r\n          handleClick={handleClick}\r\n          handleAction={handleAction}\r\n          handleReset={handleReset}\r\n          handleClearInput={handleClearInput}\r\n          handleDeleteLast={handleDeleteLast}\r\n        />\r\n      </form>\r\n      {/* Tests */}\r\n      {/* <div className=\"calculator__info-wrapper\">\r\n        <div className={`calculator__info`}>\r\n          <p>Input: {inputFieldValue}</p>\r\n          <p>First Number: {prevNumber}</p>\r\n          <p>Action: {action}</p>\r\n          <p>isResult: {isDone.toString()}</p>\r\n        </div>\r\n      </div> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Calculator;","import Calculator from './Calculator';\n\nfunction App(props: object) {\n  return (\n    <div className=\"app\">\n      <main className=\"content\">\n        <Calculator />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}